class Location {

    real id;

    Location(real id) : id(id) {}
}

class Map {

    predicate Distance(Location from, Location to, real distance) {
        false;
    }
}

class Navigator : StateVariable {

    Map map;

    Navigator(Map map) : map(map) {}

    predicate At(Location l) {
        duration >= 1;
        goal going = new GoingTo(end:start, to:l);
    }

    predicate GoingTo(Location from, Location to) {
        goal dist = new map.Distance(from:from, to:to);
        duration >= dist.distance/speed;
        goal at = new At(end:start, l:from);
    }
}

class Visibility : StateVariable {

    predicate Visible() {
        false;
    }

    predicate NotVisible() {
        false;
    }
}

class Robot {

    Navigator navigator;
    ReusableResource antenna = new ReusableResource(1.0);
    Visibility visibility;

    Robot(Map map, Visibility visibility) : navigator(new Navigator(map)), visibility(visibility) {}

    predicate At(Location l) : IntervalPredicate {
        goal at = new navigator.At(start:start, end:end, duration:duration, l:l);
    }

    predicate TakePicture(real id, Location l) : IntervalPredicate {
        duration == 50;
        goal at = new navigator.At(l:l); at.start <= start; at.end >= end;
    }

    predicate Download(real id, Location l) : IntervalPredicate {
        duration == picture_size/download_rate;
        goal tp = new TakePicture(id:id, l:l); tp.end <= start;
        fact antenna_use = new antenna.Use(start:start, end:end, duration:duration, amount:1.0);
        goal vis = new visibility.Visible(); vis.start <= start; vis.end >= end;
    }
}