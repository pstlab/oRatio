/**
* Domain: Blocks
* Problem: Blocks
*/

Block a = new Block(1.0);
Block b = new Block(2.0);
Block c = new Block(3.0);
Block d = new Block(4.0);

BlocksAgent agent = new BlocksAgent();
BlocksState state = agent.propositional_state;

fact clear_a = new agent.propositional_state.Clear(polarity:true, x:a, start:origin);  clear_a.duration >= 1.0;
fact clear_b = new agent.propositional_state.Clear(polarity:true, x:b, start:origin);  clear_b.duration >= 1.0;
fact clear_c = new agent.propositional_state.Clear(polarity:true, x:c, start:origin);  clear_c.duration >= 1.0;
fact clear_d = new agent.propositional_state.Clear(polarity:true, x:d, start:origin);  clear_d.duration >= 1.0;
fact ontable_a = new agent.propositional_state.Ontable(polarity:true, x:a, start:origin);  ontable_a.duration >= 1.0;
fact ontable_b = new agent.propositional_state.Ontable(polarity:true, x:b, start:origin);  ontable_b.duration >= 1.0;
fact ontable_c = new agent.propositional_state.Ontable(polarity:true, x:c, start:origin);  ontable_c.duration >= 1.0;
fact ontable_d = new agent.propositional_state.Ontable(polarity:true, x:d, start:origin);  ontable_d.duration >= 1.0;
fact handempty = new agent.propositional_state.Handempty(polarity:true, start:origin);  handempty.duration >= 1.0;

goal on_d_c = new agent.propositional_state.On(polarity:true, x:d, y:c, end:horizon);
goal on_c_b = new agent.propositional_state.On(polarity:true, x:c, y:b, end:horizon);
goal on_b_a = new agent.propositional_state.On(polarity:true, x:b, y:a, end:horizon);